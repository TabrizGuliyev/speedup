/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bsptechs.main.bean.ui.panel;

import com.bsptechs.main.Main;
import com.bsptechs.main.bean.Charset;
import com.bsptechs.main.bean.Collation;
import com.bsptechs.main.bean.ui.frame.CreatDB;
import com.bsptechs.main.bean.ui.tree.database.SUConnectionTreeNode;
import com.bsptechs.main.bean.ui.tree.database.SUDatabaseTreeNode;
import com.bsptechs.main.dao.impl.DatabaseDAOImpl;
import java.util.Iterator;

import java.util.List;

/**
 * @author Goshgar
 */
public class PanelCreateDbGeneral extends javax.swing.JPanel {

    DatabaseDAOImpl databaseDAOImpl = new DatabaseDAOImpl();
    SUDatabaseTreeNode database;
    SUConnectionTreeNode connection = (SUConnectionTreeNode) Main.instance().getConnectionTree().getSelectedNode();

    /**
     * Creates new form PanelCreateDbGeneral
     */
    public PanelCreateDbGeneral() {
        fillCharsetCombo();
        initComponents();
        errorMessage.setVisible(false);
    }

    private List<Charset> fillCharsetCombo() {
        
        List<Charset> list = databaseDAOImpl.getAllCharsets(Main.instance().getConnectionTree().getCurrentConnectionNode().getConnection());
        
        for (Iterator<Charset> it = list.iterator(); it.hasNext();) {
            Charset charset = it.next();
            System.out.println(charset);
            charsetCmbo.addItem(charset);
            break;
        }

        return list;
    }

    private void fillCollationCombo() {
        Charset selectedCharset = (Charset) charsetCmbo.getSelectedItem();
        System.out.println(selectedCharset);
        collationCombo.removeAllItems();
        List<Collation> collations = databaseDAOImpl.getAllCollations(Main.instance().getConnectionTree().getCurrentConnectionNode().getConnection(), selectedCharset);
        for (Collation collation : collations) {
            collationCombo.addItem(collation);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitCreateDB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dbName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        charsetCmbo = new javax.swing.JComboBox<>();
        collationCombo = new javax.swing.JComboBox<>();
        cancelBtn = new javax.swing.JButton();
        errorMessage = new javax.swing.JLabel();

        submitCreateDB.setText("OK");
        submitCreateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitCreateDBActionPerformed(evt);
            }
        });

        jLabel1.setText("Database Name:");

        jLabel2.setText("Set Charset");

        jLabel3.setText("Collation");

        charsetCmbo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                charsetCmboItemStateChanged(evt);
            }
        });
        charsetCmbo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                charsetCmboMouseClicked(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        errorMessage.setForeground(new java.awt.Color(204, 0, 0));
        errorMessage.setText("Take Another One");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(charsetCmbo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(collationCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(submitCreateDB, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelBtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dbName)
                            .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorMessage)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(charsetCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(collationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitCreateDB)
                    .addComponent(cancelBtn))
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        new com.bsptechs.main.bean.ui.frame.CreatDB().dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void charsetCmboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_charsetCmboMouseClicked

    }//GEN-LAST:event_charsetCmboMouseClicked

    private void charsetCmboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_charsetCmboItemStateChanged
        fillCollationCombo();
    }//GEN-LAST:event_charsetCmboItemStateChanged

    private void submitCreateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitCreateDBActionPerformed
        Charset selectedCharset = (Charset) charsetCmbo.getSelectedItem();
        Collation selectedCollation = (Collation) collationCombo.getSelectedItem();
        String databaseName = dbName.getText();
        if ("".equals(dbName.getText())) {
            errorMessage.setText("Enter database name");
            errorMessage.setVisible(true);
        } else {

            databaseDAOImpl.createDb(connection.getConnection(), null, databaseName, selectedCharset.getName(), selectedCollation.getName());
            new CreatDB().dispose();
        }

    }//GEN-LAST:event_submitCreateDBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<Charset> charsetCmbo;
    private javax.swing.JComboBox<Collation> collationCombo;
    private javax.swing.JTextField dbName;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton submitCreateDB;
    // End of variables declaration//GEN-END:variables
}
